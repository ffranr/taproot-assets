syntax = "proto3";

package rfqrpc;

option go_package = "github.com/lightninglabs/taproot-assets/taprpc/rfqrpc";

service Rfq {
    /* tapcli: `rfq buyorder`
    UpsertAssetBuyOrder is used to upsert a buy order for a specific asset.
    */
    rpc UpsertAssetBuyOrder (UpsertAssetBuyOrderRequest)
        returns (UpsertAssetBuyOrderResponse);

    //    /* tapcli: `rfq sellorder`
    //    UpsertAssetSellOrder is used to upsert a sell order for a specific
    //    asset.
    //     */
    //    rpc UpsertAssetSellOrder (UpsertAssetSellOrderRequest)
    //        returns (UpsertAssetSellOrderResponse);
}

message AssetSpecifier {
    oneof id {
        // The 32-byte asset ID specified as raw bytes (gRPC only).
        bytes asset_id = 1;

        // The 32-byte asset ID encoded as a hex string (use this for REST).
        string asset_id_str = 2;

        // The 32-byte asset group key specified as raw bytes (gRPC only).
        bytes group_key = 3;

        // The 32-byte asset group key encoded as hex string (use this for
        // REST).
        string group_key_str = 4;
    }
}

message UpsertAssetBuyOrderRequest {
    // asset_specifier is the subject asset.
    AssetSpecifier asset_specifier = 1;

    // The minimum amount of the asset to buy.
    uint64 min_asset_amount = 2;

    // The maximum amount BTC to spend (units: millisats).
    uint64 max_bid = 3;

    // The unix timestamp after which the order is no longer valid.
    uint64 expiry = 4;

    // peer is an optional field that can be used to specify the peer to
    // send the order to.
    bytes peer = 5;
}

message UpsertAssetBuyOrderResponse {
}

// message UpsertAssetSellOrderRequest {
//     // The asset to sell.
//     AssetSpecifier asset = 1;
//
//     // The maximum amount of the asset to sell.
//     uint64 max_asset_amount = 2;
//
//     // The minimum asking price in BTC (units: millisats).
//     uint64 min_ask = 3;
//
//     // The unix timestamp after which the order is no longer valid.
//     uint64 expiry = 4;
// }
//
// message UpsertAssetSellOrderResponse {
// }
